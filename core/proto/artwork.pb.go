// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: artwork.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProcessedArtworkInfo_SourceName int32

const (
	ProcessedArtworkInfo_Pixiv ProcessedArtworkInfo_SourceName = 0
)

// Enum value maps for ProcessedArtworkInfo_SourceName.
var (
	ProcessedArtworkInfo_SourceName_name = map[int32]string{
		0: "Pixiv",
	}
	ProcessedArtworkInfo_SourceName_value = map[string]int32{
		"Pixiv": 0,
	}
)

func (x ProcessedArtworkInfo_SourceName) Enum() *ProcessedArtworkInfo_SourceName {
	p := new(ProcessedArtworkInfo_SourceName)
	*p = x
	return p
}

func (x ProcessedArtworkInfo_SourceName) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProcessedArtworkInfo_SourceName) Descriptor() protoreflect.EnumDescriptor {
	return file_artwork_proto_enumTypes[0].Descriptor()
}

func (ProcessedArtworkInfo_SourceName) Type() protoreflect.EnumType {
	return &file_artwork_proto_enumTypes[0]
}

func (x ProcessedArtworkInfo_SourceName) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProcessedArtworkInfo_SourceName.Descriptor instead.
func (ProcessedArtworkInfo_SourceName) EnumDescriptor() ([]byte, []int) {
	return file_artwork_proto_rawDescGZIP(), []int{0, 0}
}

type ProcessedArtworkInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArtworkID   uint64                              `protobuf:"varint,1,opt,name=artworkID,proto3" json:"artworkID,omitempty"`
	Title       string                              `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Author      string                              `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	Description string                              `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Source      ProcessedArtworkInfo_SourceName     `protobuf:"varint,5,opt,name=source,proto3,enum=artwork.ProcessedArtworkInfo_SourceName" json:"source,omitempty"`
	SourceURL   string                              `protobuf:"bytes,6,opt,name=sourceURL,proto3" json:"sourceURL,omitempty"`
	Tags        []string                            `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
	R18         bool                                `protobuf:"varint,8,opt,name=r18,proto3" json:"r18,omitempty"`
	Pictures    []*ProcessedArtworkInfo_PictureInfo `protobuf:"bytes,9,rep,name=pictures,proto3" json:"pictures,omitempty"`
}

func (x *ProcessedArtworkInfo) Reset() {
	*x = ProcessedArtworkInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artwork_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessedArtworkInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessedArtworkInfo) ProtoMessage() {}

func (x *ProcessedArtworkInfo) ProtoReflect() protoreflect.Message {
	mi := &file_artwork_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessedArtworkInfo.ProtoReflect.Descriptor instead.
func (*ProcessedArtworkInfo) Descriptor() ([]byte, []int) {
	return file_artwork_proto_rawDescGZIP(), []int{0}
}

func (x *ProcessedArtworkInfo) GetArtworkID() uint64 {
	if x != nil {
		return x.ArtworkID
	}
	return 0
}

func (x *ProcessedArtworkInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ProcessedArtworkInfo) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *ProcessedArtworkInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProcessedArtworkInfo) GetSource() ProcessedArtworkInfo_SourceName {
	if x != nil {
		return x.Source
	}
	return ProcessedArtworkInfo_Pixiv
}

func (x *ProcessedArtworkInfo) GetSourceURL() string {
	if x != nil {
		return x.SourceURL
	}
	return ""
}

func (x *ProcessedArtworkInfo) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ProcessedArtworkInfo) GetR18() bool {
	if x != nil {
		return x.R18
	}
	return false
}

func (x *ProcessedArtworkInfo) GetPictures() []*ProcessedArtworkInfo_PictureInfo {
	if x != nil {
		return x.Pictures
	}
	return nil
}

type GetArtworkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArtworkID uint64 `protobuf:"varint,1,opt,name=artworkID,proto3" json:"artworkID,omitempty"`
}

func (x *GetArtworkRequest) Reset() {
	*x = GetArtworkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artwork_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArtworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtworkRequest) ProtoMessage() {}

func (x *GetArtworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artwork_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtworkRequest.ProtoReflect.Descriptor instead.
func (*GetArtworkRequest) Descriptor() ([]byte, []int) {
	return file_artwork_proto_rawDescGZIP(), []int{1}
}

func (x *GetArtworkRequest) GetArtworkID() uint64 {
	if x != nil {
		return x.ArtworkID
	}
	return 0
}

type GetArtworkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Artwork *ProcessedArtworkInfo `protobuf:"bytes,1,opt,name=artwork,proto3" json:"artwork,omitempty"`
}

func (x *GetArtworkResponse) Reset() {
	*x = GetArtworkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artwork_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArtworkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtworkResponse) ProtoMessage() {}

func (x *GetArtworkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artwork_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtworkResponse.ProtoReflect.Descriptor instead.
func (*GetArtworkResponse) Descriptor() ([]byte, []int) {
	return file_artwork_proto_rawDescGZIP(), []int{2}
}

func (x *GetArtworkResponse) GetArtwork() *ProcessedArtworkInfo {
	if x != nil {
		return x.Artwork
	}
	return nil
}

type GetPictureDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PictureID uint64 `protobuf:"varint,1,opt,name=pictureID,proto3" json:"pictureID,omitempty"`
}

func (x *GetPictureDataRequest) Reset() {
	*x = GetPictureDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artwork_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPictureDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPictureDataRequest) ProtoMessage() {}

func (x *GetPictureDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artwork_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPictureDataRequest.ProtoReflect.Descriptor instead.
func (*GetPictureDataRequest) Descriptor() ([]byte, []int) {
	return file_artwork_proto_rawDescGZIP(), []int{3}
}

func (x *GetPictureDataRequest) GetPictureID() uint64 {
	if x != nil {
		return x.PictureID
	}
	return 0
}

type GetPictureDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Binary []byte `protobuf:"bytes,1,opt,name=binary,proto3" json:"binary,omitempty"`
}

func (x *GetPictureDataResponse) Reset() {
	*x = GetPictureDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artwork_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPictureDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPictureDataResponse) ProtoMessage() {}

func (x *GetPictureDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artwork_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPictureDataResponse.ProtoReflect.Descriptor instead.
func (*GetPictureDataResponse) Descriptor() ([]byte, []int) {
	return file_artwork_proto_rawDescGZIP(), []int{4}
}

func (x *GetPictureDataResponse) GetBinary() []byte {
	if x != nil {
		return x.Binary
	}
	return nil
}

type ProcessedArtworkInfo_PictureInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PictureID uint64  `protobuf:"varint,1,opt,name=pictureID,proto3" json:"pictureID,omitempty"`
	DirectURL string  `protobuf:"bytes,2,opt,name=directURL,proto3" json:"directURL,omitempty"`
	Width     uint64  `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height    uint64  `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	BlurScore float64 `protobuf:"fixed64,5,opt,name=blur_score,json=blurScore,proto3" json:"blur_score,omitempty"`
}

func (x *ProcessedArtworkInfo_PictureInfo) Reset() {
	*x = ProcessedArtworkInfo_PictureInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artwork_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessedArtworkInfo_PictureInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessedArtworkInfo_PictureInfo) ProtoMessage() {}

func (x *ProcessedArtworkInfo_PictureInfo) ProtoReflect() protoreflect.Message {
	mi := &file_artwork_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessedArtworkInfo_PictureInfo.ProtoReflect.Descriptor instead.
func (*ProcessedArtworkInfo_PictureInfo) Descriptor() ([]byte, []int) {
	return file_artwork_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ProcessedArtworkInfo_PictureInfo) GetPictureID() uint64 {
	if x != nil {
		return x.PictureID
	}
	return 0
}

func (x *ProcessedArtworkInfo_PictureInfo) GetDirectURL() string {
	if x != nil {
		return x.DirectURL
	}
	return ""
}

func (x *ProcessedArtworkInfo_PictureInfo) GetWidth() uint64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *ProcessedArtworkInfo_PictureInfo) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *ProcessedArtworkInfo_PictureInfo) GetBlurScore() float64 {
	if x != nil {
		return x.BlurScore
	}
	return 0
}

var File_artwork_proto protoreflect.FileDescriptor

var file_artwork_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x61, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x61, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x22, 0x83, 0x04, 0x0a, 0x14, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x41, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x40, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x28, 0x2e, 0x61, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x65, 0x64, 0x41, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x31, 0x38, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x03, 0x72, 0x31, 0x38, 0x12, 0x45, 0x0a, 0x08, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x72, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x41, 0x72, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x08, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x1a, 0x96, 0x01, 0x0a,
	0x0b, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x55, 0x52, 0x4c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x52, 0x4c, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x75, 0x72, 0x5f, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x62, 0x6c, 0x75, 0x72,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x17, 0x0a, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x69, 0x78, 0x69, 0x76, 0x10, 0x00, 0x22, 0x31,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49,
	0x44, 0x22, 0x4d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x61, 0x72, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x72, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x41, 0x72, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x61, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x22, 0x35, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x69, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x69,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44, 0x22, 0x30, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x69,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x32, 0xb0, 0x01, 0x0a, 0x0e, 0x41, 0x72,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a,
	0x2e, 0x61, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x72, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x69,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x2e, 0x61, 0x72, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x72, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x42, 0x09, 0x5a, 0x07,
	0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_artwork_proto_rawDescOnce sync.Once
	file_artwork_proto_rawDescData = file_artwork_proto_rawDesc
)

func file_artwork_proto_rawDescGZIP() []byte {
	file_artwork_proto_rawDescOnce.Do(func() {
		file_artwork_proto_rawDescData = protoimpl.X.CompressGZIP(file_artwork_proto_rawDescData)
	})
	return file_artwork_proto_rawDescData
}

var file_artwork_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_artwork_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_artwork_proto_goTypes = []interface{}{
	(ProcessedArtworkInfo_SourceName)(0),     // 0: artwork.ProcessedArtworkInfo.SourceName
	(*ProcessedArtworkInfo)(nil),             // 1: artwork.ProcessedArtworkInfo
	(*GetArtworkRequest)(nil),                // 2: artwork.GetArtworkRequest
	(*GetArtworkResponse)(nil),               // 3: artwork.GetArtworkResponse
	(*GetPictureDataRequest)(nil),            // 4: artwork.GetPictureDataRequest
	(*GetPictureDataResponse)(nil),           // 5: artwork.GetPictureDataResponse
	(*ProcessedArtworkInfo_PictureInfo)(nil), // 6: artwork.ProcessedArtworkInfo.PictureInfo
}
var file_artwork_proto_depIdxs = []int32{
	0, // 0: artwork.ProcessedArtworkInfo.source:type_name -> artwork.ProcessedArtworkInfo.SourceName
	6, // 1: artwork.ProcessedArtworkInfo.pictures:type_name -> artwork.ProcessedArtworkInfo.PictureInfo
	1, // 2: artwork.GetArtworkResponse.artwork:type_name -> artwork.ProcessedArtworkInfo
	2, // 3: artwork.ArtworkService.GetArtworkInfo:input_type -> artwork.GetArtworkRequest
	4, // 4: artwork.ArtworkService.GetPictureData:input_type -> artwork.GetPictureDataRequest
	3, // 5: artwork.ArtworkService.GetArtworkInfo:output_type -> artwork.GetArtworkResponse
	5, // 6: artwork.ArtworkService.GetPictureData:output_type -> artwork.GetPictureDataResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_artwork_proto_init() }
func file_artwork_proto_init() {
	if File_artwork_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_artwork_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessedArtworkInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artwork_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArtworkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artwork_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArtworkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artwork_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPictureDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artwork_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPictureDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artwork_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessedArtworkInfo_PictureInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_artwork_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_artwork_proto_goTypes,
		DependencyIndexes: file_artwork_proto_depIdxs,
		EnumInfos:         file_artwork_proto_enumTypes,
		MessageInfos:      file_artwork_proto_msgTypes,
	}.Build()
	File_artwork_proto = out.File
	file_artwork_proto_rawDesc = nil
	file_artwork_proto_goTypes = nil
	file_artwork_proto_depIdxs = nil
}
